// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using hms.Utils;

#nullable disable

namespace hms.Migrations
{
    [DbContext(typeof(DbCtx))]
    [Migration("20250818120635_UserForeignKeyAdded")]
    partial class UserForeignKeyAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("hms.Models.Department", b =>
                {
                    b.Property<string>("UName")
                        .HasColumnType("text")
                        .HasColumnName("uname");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("UName");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("hms.Models.Doctor", b =>
                {
                    b.Property<string>("UName")
                        .HasColumnType("text")
                        .HasColumnName("uname");

                    b.Property<string>("DeptKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dept");

                    b.Property<string>("MaxQualification")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("max_qual");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("specialization");

                    b.HasKey("UName");

                    b.HasIndex("DeptKey");

                    b.ToTable("doctors");
                });

            modelBuilder.Entity("hms.Models.Patient", b =>
                {
                    b.Property<string>("UName")
                        .HasColumnType("text")
                        .HasColumnName("uname");

                    b.Property<DateOnly>("DateBirth")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.HasKey("UName");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("hms.Models.UName", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.HasKey("Name");

                    b.ToTable("unames");
                });

            modelBuilder.Entity("hms.Models.User", b =>
                {
                    b.Property<string>("UName")
                        .HasColumnType("text")
                        .HasColumnName("uname");

                    b.Property<string>("PassHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pass");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("UName");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UName = "sudo",
                            PassHash = "abcd",
                            Type = 0
                        });
                });

            modelBuilder.Entity("hms.Models.Doctor", b =>
                {
                    b.HasOne("hms.Models.Department", "Dept")
                        .WithMany("Doctors")
                        .HasForeignKey("DeptKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hms.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dept");

                    b.Navigation("User");
                });

            modelBuilder.Entity("hms.Models.Patient", b =>
                {
                    b.HasOne("hms.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("hms.Models.Department", b =>
                {
                    b.Navigation("Doctors");
                });
#pragma warning restore 612, 618
        }
    }
}
